{{template "base" .}}

{{define "content"}}
<div class="container min-vh-100">
  <div class="row">
    <div class="col">
      <h1>
        Search for availability
      </h1>
      <form action="reservation" method="POST" class="needs-validation" novalidate>
        <div class="form-row mt-5">
          <div class="col">
            <div class="row" id="reservation-date">
              <div class="col">
                <label for="start">Start date</label>
                <input required class="form-control" type="text" id="start" name="start" placeholder="Arrival date">
              </div>
              <div class="invalid-feedback">
                Please select a correct date
              </div>
              <div class="col">
                <label for="end">End date</label>
                <input required class="form-control" type="text" id="end" name="end" placeholder="Departure date">
              </div>
              <div class="invalid-feedback">
                Please select a correct date
              </div>
            </div>
          </div>
        </div>
        <hr>
        <button type="submit" class="btn btn-primary">Check availability</button>
        <button type="button" id="main-btn" class="btn btn-primary">test</button>
      </form>
    </div>
  </div>
</div>


{{end}}

{{define "script"}}
<script>
  let attention = Prompt();

  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict';
    window.addEventListener('load', function () {
      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      let forms = document.getElementsByClassName('needs-validation');
      // Loop over them and prevent submission
      let validation = Array.prototype.filter.call(forms, function (form) {
        form.addEventListener('submit', function (event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();

  //Date picker
  const elem = document.getElementById('reservation-date')
  const rangepicker = new DateRangePicker(elem, {
    format : "yyyy-mm-dd"
  })

  //Notifications
  function notify(msg, msgType){
    notie.alert({
      type: msgType,
      text: msg,
      position: "top"
    })
  }

 // Modals
  function notifyModal(title, text, icon, confirmBtnText) {
    Swal.fire({
      title: title,
      text: text,
      icon: icon,
      confirmButtonText: confirmBtnText
    })

  
  }
  const button = document.getElementById("main-btn").addEventListener("click", function(){
    let html = /*html*/`
      <form id="check availability-form" action="" method="post" class="needs-validation" novalidate>
        <div class="row">
          <div class="col">
            <div class="row" id="reservation-dates-modal">
              <div class="col">
                <input required class="form-control" type="text" name="start" id="start" placeholder="arrival">
              </div>
              <div class="col">
                <input required class="form-control" type="text" name="end" id="end" placeholder="departure">
              </div>
            </div>
          </div>
        </div>
      </form>
    `
    attention.custom({
      msg: html,
      title: "Choose your dates"
    })
  })

  function Prompt(){
    let toast = function(defaults){
      const {
        msg = "defaut",
        icon="success",
        position="top-end"
      } = defaults

        const Toast = Swal.mixin({
          toast: true,
          icon: icon,
          title: msg,
          position: position,
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
          didOpen: (toast) => {
            toast.onmouseenter = Swal.stopTimer;
            toast.onmouseleave = Swal.resumeTimer;
          }
        });
        Toast.fire({
        });
    }

    let success = function (defaults) {
      const {
        title = "title",
        msg = "defaut",
        footer=""
      } = defaults

      Swal.fire({
        icon:"success",
        title:title,
        text:msg,
        footer:footer
      })
    }

    let error = function (defaults) {
      const {
        title = "title",
        msg = "defaut",
        footer = ""
      } = defaults

      Swal.fire({
        icon: "error",
        title: title,
        text: msg,
        footer: footer
      })
    }

    async function custom(defaults){
      const {
        msg="",
        title=""
      } = defaults

      const {value: formValues} = await Swal.fire({
        title: title,
        html: msg,
        background:false,
        focusConfirm: false,
        showCancelButton:true,
        willOpen: () => {
          const elem = document.getElementById("reservation-dates-modal")
          const rp = new DateRangePicker(elem, {
            format:"yyyy-mm-dd",
            showOnFocus:true,
            orientation: "top"
          })
        },
        preConfirm: ()=> {
          return [
            document.getElementById("start").value,
            document.getElementById("end").value,
          ]
        }
      })

      if (formValues) {
        Swal.fire(JSON.stringify(formValues))
      }
    }

    return {
      toast:toast,
      success:success,
      error: error,
      custom:custom
    }
  }

</script>

{{end}}